import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as l,a as r,b as p,e as n,d as i,w as e,r as h,o as k}from"./app-VRpq1tPx.js";const o={};function d(g,s){const a=h("RouteLink");return k(),l("div",null,[s[5]||(s[5]=r(`<h2 id="spring-framework-integration" tabindex="-1"><a class="header-anchor" href="#spring-framework-integration"><span>Spring Framework Integration</span></a></h2><p>The DSF uses some of the <a href="https://spring.io/projects/spring-framework" target="_blank" rel="noopener noreferrer">Spring Framework&#39;s</a> functionality. When deployed, every process plugin exists in its own <a href="https://docs.spring.io/spring-framework/reference/core/beans/introduction.html" target="_blank" rel="noopener noreferrer">Spring context</a>. Process plugins require <a href="https://docs.spring.io/spring-framework/reference/core/beans/definition.html" target="_blank" rel="noopener noreferrer">Spring Beans</a> with <code>prototype</code> <a href="https://docs.spring.io/spring-framework/reference/core/beans/factory-scopes.html" target="_blank" rel="noopener noreferrer">scope</a> for all classes which either extend or implement the following classes/interfaces:</p><ul><li><code>AbstractTaskMessageSend</code></li><li><code>AbstractServiceDelegate</code></li><li><code>DefaultUserTaskListener</code></li><li><code>ProcessPluginDeploymentStateListener</code></li></ul><p>A <a href="https://docs.spring.io/spring-framework/docs/current/reference/html/core.html#beans-java-basic-concepts" target="_blank" rel="noopener noreferrer">Spring-Framework configuration class</a> located in the <code>spring/config</code> directory is expected to provide the Spring Beans. If you are unfamiliar with the Spring Framework, you can find more information in <a href="https://docs.spring.io/spring-framework/reference/core/beans/java.html" target="_blank" rel="noopener noreferrer">Java-based Container Configuration</a> of the Spring Framework documentation, specifically the topics <a href="https://docs.spring.io/spring-framework/reference/core/beans/java/bean-annotation.html" target="_blank" rel="noopener noreferrer">Using the @Bean Annotation</a> and <a href="https://docs.spring.io/spring-framework/reference/core/beans/java/configuration-annotation.html" target="_blank" rel="noopener noreferrer">Using the @Configuration Annotation</a>.</p><p>Below is an example of a Spring configuration class:</p><div class="language-java line-numbers-mode" data-highlighter="shiki" data-ext="java" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-java"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Configuration</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">public</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> class</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> TutorialConfig</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Autowired</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> ProcessPluginApi</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  //instance will be injected at runtime</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${dev.dsf.process.tutorial.loggingEnabled:false}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">ProcessDocumentation</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Set to true to enable logging&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> required</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> processNames</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PROCESS_NAME_FULL_DIC)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> loggingEnabled</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //environment variable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Value</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;\${dev.dsf.process.tutorial.userVote:false}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">ProcessDocumentation</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">description</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Set to true to enable users to vote&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> required</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> processNames</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> PROCESS_NAME_FULL_VOTING_PROCESS)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	private</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> boolean</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> userVote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> //environment variable</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">    //register classes as prototype beans</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Scope</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(SCOPE_PROTOTYPE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DicTask</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> dicTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> DicTask</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(api, loggingEnabled);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    @</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Scope</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(SCOPE_PROTOTYPE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> DecideWhetherUserVote</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> decideWhetherUserVote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> DecideWhetherUserVote</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(api, userVote);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Scope</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(SCOPE_PROTOTYPE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> HelloCosMessage</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> helloCosMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> HelloCosMessage</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(api);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Bean</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	@</span><span style="--shiki-light:#A626A4;--shiki-dark:#E5C07B;">Scope</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">(SCOPE_PROTOTYPE)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	public</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> UserVoteListener</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> userVoteListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> new</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> UserVoteListener</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(api);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="related-topics" tabindex="-1"><a class="header-anchor" href="#related-topics"><span>Related Topics</span></a></h2>`,7)),p("p",null,[n(a,{to:"/process-development/api-v1/dsf/environment-variables.html"},{default:e(()=>[...s[0]||(s[0]=[i("Environment Variables",-1)])]),_:1}),s[3]||(s[3]=i(", ",-1)),n(a,{to:"/process-development/api-v1/dsf/message-delegates.html"},{default:e(()=>[...s[1]||(s[1]=[i("Message Delegates",-1)])]),_:1}),s[4]||(s[4]=i(", ",-1)),n(a,{to:"/process-development/api-v1/dsf/service-delegates.html"},{default:e(()=>[...s[2]||(s[2]=[i("Service Delegates",-1)])]),_:1})])])}const B=t(o,[["render",d]]),y=JSON.parse(`{"path":"/process-development/api-v1/dsf/spring-framework-integration.html","title":"Spring Framework Integration","lang":"en-US","frontmatter":{"title":"Spring Framework Integration","icon":"creative"},"git":{"createdTime":1712559938000,"updatedTime":1750687880000,"contributors":[{"name":"Jan Böhringer","username":"","email":"jan.boehringer@hs-heilbronn.de","commits":5},{"name":"Hauke Hund","username":"","email":"hauke.hund@hs-heilbronn.de","commits":1}]},"readingTime":{"minutes":0.88,"words":265},"filePathRelative":"process-development/api-v1/dsf/spring-framework-integration.md","excerpt":"<h2>Spring Framework Integration</h2>\\n<p>The DSF uses some of the <a href=\\"https://spring.io/projects/spring-framework\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Spring Framework's</a> functionality. When deployed, every process plugin exists in its own <a href=\\"https://docs.spring.io/spring-framework/reference/core/beans/introduction.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Spring context</a>. Process plugins require <a href=\\"https://docs.spring.io/spring-framework/reference/core/beans/definition.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Spring Beans</a> with <code>prototype</code> <a href=\\"https://docs.spring.io/spring-framework/reference/core/beans/factory-scopes.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">scope</a> for all classes which either extend or implement the following classes/interfaces:</p>"}`);export{B as comp,y as data};
